contract EscrowContract {
  address seller;
  address buyer;
  uint value;
  enum State { Created, Confirmed, Disabled}
  State state;
  modifier onlySeller() { if (msg.sender != seller) throw; _ }
  modifier onlyBuyer() { if (msg.sender != buyer) throw; _ }
  modifier condition(bool c) { if (!c) throw; _ }
  modifier inState(State s) { if (state != s) throw; _ }
  event PurchaseConfirmed();
  event Received();
  event Refunded();
  function Purchase() condition(msg.value%2==0) {
    seller = msg.sender;
    value = msg.value/2;
  }
  function confirmPurchase()
    inState(State.Created)
    condition(msg.value ==2 * value)
  {
    buyer = msg.sender;
    state = State.Confirmed;
    PurchaseConfirmed();
  }
  function confirmReceived() {
    inState(State.Confirmed)
    onlyBuyer
  {
    buyer.send(value);
    seller.send(this.balance);
    state = State.Disabled;
    Received();
  }
  function refundBuyer()
    inState(State.Confirmed)
    onlySeller
  {
    buyer.send(2 * value);
    seller.send(this.balance);
    state = State.Disabled;
    Refunded();
  }
}